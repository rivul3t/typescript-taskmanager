// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  name     String @unique
  password String

  projects ProjectMember[]
  tasks    Task[]
}

model Project {
  id          Int             @id @default(autoincrement())
  name        String          @unique
  description String?
  members     ProjectMember[]
  tasks       Task[]
}

enum Role {
  MEMBER
  OWNER
}

model ProjectMember {
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId Int
  role      Role    @default(MEMBER)

  @@id([userId, projectId])
}

enum TaskStatus {
  CREATED
  PROGRESS
  DONE
}

model Task {
  id             Int        @id @default(autoincrement())
  projectId      Int
  performerId    Int?
  name           String
  description    String?
  startDate      DateTime?
  completionDate DateTime?
  dueDate        DateTime?
  costedTime     Int?
  status         TaskStatus @default(CREATED)

  @@unique([name, projectId])

  project   Project @relation(fields: [projectId], references: [id])
  performer User?   @relation(fields: [performerId], references: [id])
}
